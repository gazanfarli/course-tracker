{"version":3,"sources":["components/Tags.js","components/CourseForm.js","components/Course.js","components/CourseList.js","App.js","reportWebVitals.js","index.js"],"names":["Tags","tagsUpdated","key","useState","selectedTags","setSelectedTags","useEffect","tagChange","e","value","target","alreadySelected","includes","checked","filter","prevTag","map","choice","index","className","type","onChange","CourseForm","courseAdded","name","setName","link","setLink","tags","setTags","count","setCount","submitCourse","a","preventDefault","fetch","method","body","JSON","stringify","console","error","log","onSubmit","htmlFor","Course","course","refreshCourses","markCoursePurchased","purchased","deleteCourse","id","href","tag","onClick","CourseList","courses","App","setCourses","loadCourses","res","json","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"iQA0CeA,EAxCF,SAAC,GAA0B,IAAxBC,EAAuB,EAAvBA,YAAaC,EAAU,EAAVA,IAEzB,EAAwCC,mBAAS,IAAjD,mBAAOC,EAAP,KAAqBC,EAArB,KAEAC,qBAAU,WACND,EAAgB,MACjB,CAACH,IAEJ,IAAMK,EAAY,SAACC,GACf,IAAMC,EAAQD,EAAEE,OAAOD,MACjBE,EAAkBP,EAAaQ,SAASH,GAC1CD,EAAEE,OAAOG,UAAYF,EACrBN,EAAgB,GAAD,mBAAKD,GAAL,CAAmBK,MAC1BD,EAAEE,OAAOG,SAAWF,GAC5BN,EACID,EAAaU,QAAO,SAACC,GAAD,OAAaA,IAAYN,OASzD,OAJAH,qBAAU,WACNL,EAAYG,KACb,CAACA,EAAcH,IAGd,mCAxBe,CAAC,OAAQ,aAAc,QAAS,eAAe,oBAAoB,UAyBlEe,KAAI,SAACC,EAAQC,GAAT,OACZ,wBAAOC,UAAU,uBAAjB,UACI,uBACIC,KAAK,WACLX,MAAOQ,EACPI,SAAUd,IAEb,IAAMU,IANkCC,SC1B9C,SAASI,EAAT,GAAsC,IAAhBC,EAAe,EAAfA,YACjC,EAAwBpB,mBAAS,IAAjC,mBAAOqB,EAAP,KAAaC,EAAb,KACA,EAAwBtB,mBAAS,IAAjC,mBAAOuB,EAAP,KAAaC,EAAb,KACA,EAAwBxB,mBAAS,IAAjC,mBAAOyB,EAAP,KAAaC,EAAb,KACA,EAA0B1B,mBAAS,GAAnC,mBAAO2B,EAAP,KAAcC,EAAd,KAQMC,EAAY,uCAAG,WAAOxB,GAAP,SAAAyB,EAAA,6DACjBzB,EAAE0B,iBADe,kBAGPC,MAAM,yCAA0C,CAClDC,OAAQ,OACRC,KAAMC,KAAKC,UAAU,CAAEf,OAAME,OAAME,WAL1B,OALjBH,EAAQ,IACRE,EAAQ,IACRI,EAASD,EAAQ,GAWbP,IARa,gDAUbiB,QAAQC,MAAR,MAVa,QAYjBD,QAAQE,IAAIlB,EAAME,GAZD,yDAAH,sDAelB,OACI,sBAAKP,UAAU,OAAf,UACI,qBAAKA,UAAU,cAAf,8BACA,qBAAKA,UAAU,YAAf,SACI,uBAAMA,UAAU,GAAGwB,SAAUX,EAA7B,UACI,sBAAKb,UAAU,aAAf,UACI,uBAAOyB,QAAQ,OAAf,kBACA,uBACIxB,KAAK,OACLI,KAAK,OACLf,MAAOe,EACPL,UAAU,eACVE,SAAU,SAACb,GAAD,OAAOiB,EAAQjB,EAAEE,OAAOD,aAG1C,sBAAKU,UAAU,aAAf,UACI,uBAAOyB,QAAQ,OAAf,kBACA,uBACIxB,KAAK,OACLI,KAAK,OACLf,MAAOiB,EACPP,UAAU,eACVE,SAAU,SAACb,GAAD,OAAOmB,EAAQnB,EAAEE,OAAOD,aAG1C,sBAAKU,UAAU,aAAf,UACI,qCACA,cAAC,EAAD,CAAMlB,YAAa4B,GAAcC,MAErC,wBAAQV,KAAK,SAASD,UAAU,kBAAhC,4B,WCdL0B,EA3CA,SAAC,GAAgC,IAA9BC,EAA6B,EAA7BA,OAAQC,EAAqB,EAArBA,eAChBC,EAAmB,uCAAG,sBAAAf,EAAA,+EAEdE,MAAM,yCAA0C,CAClDC,OAAQ,MACRC,KAAMC,KAAKC,UAAL,2BAAoBO,GAApB,IAA4BG,WAAW,OAJ7B,OAMpBF,IANoB,+CAQpBP,QAAQC,MAAR,MARoB,wDAAH,qDAYnBS,EAAY,uCAAG,sBAAAjB,EAAA,+EAEPE,MAAM,yCAA0C,CAClDC,OAAQ,SACRC,KAAMC,KAAKC,UAAU,CAAEY,GAAIL,EAAOK,OAJzB,OAMbJ,IANa,+CAQbP,QAAQC,MAAR,MARa,wDAAH,qDAYlB,OACI,sBAAKtB,UAAU,kBAAf,UACI,mBAAGiC,KAAMN,EAAOpB,KAAhB,SACI,oBAAIP,UAAU,0BAAd,SAAyC2B,EAAOtB,SAEpD,sCACU,IACLsB,EAAOlB,MAAQkB,EAAOlB,KAAKZ,KAAI,SAACqC,EAAKnC,GAAN,OAC5B,sBAAMC,UAAU,2BAAhB,SAAwDkC,GAARnC,UAGtD4B,EAAOG,WACL,wBAAQ9B,UAAU,yBAAyBmC,QAASN,EAApD,uBAEJ,wBAAQ7B,UAAU,6BAA6BmC,QAASJ,EAAxD,wBCnBGK,EAnBI,SAAC,GAAiC,IAA/BC,EAA8B,EAA9BA,QAAST,EAAqB,EAArBA,eAC3B,OACI,gCACI,oBAAI5B,UAAU,YAAd,sBACA,qBAAKA,UAAU,aAAf,SACKqC,EACI1C,QAAO,SAACgC,GAAD,OAAaA,EAAOG,aAC3BjC,KAAI,SAAC8B,GAAD,OAAY,cAAC,EAAD,CAAQA,OAAQA,EAAwBC,eAAgBA,GAA3BD,EAAOK,SAG7D,oBAAIhC,UAAU,YAAd,+BACCqC,EACI1C,QAAO,SAACgC,GAAD,OAAYA,EAAOG,aAC1BjC,KAAI,SAAC8B,GAAD,OAAY,cAAC,EAAD,CAAQA,OAAQA,EAAwBC,eAAgBA,GAA3BD,EAAOK,W,MCetDM,MA1Bf,WACE,MAA8BtD,mBAAS,IAAvC,mBAAOqD,EAAP,KAAgBE,EAAhB,KAEMC,EAAW,uCAAG,8BAAA1B,EAAA,+EAEEE,MAAM,0CAFR,cAEVyB,EAFU,gBAGMA,EAAIC,OAHV,OAGVL,EAHU,OAIhBE,EAAWF,GAJK,kDAMdhB,QAAQC,MAAR,MANc,0DAAH,qDAcjB,OAJAnC,qBAAU,WACRqD,MACC,IAGD,sBAAKxC,UAAU,iBAAf,UACM,oBAAIA,UAAU,mBAAd,4BACA,cAACG,EAAD,CAAYC,YAAaoC,IACzB,cAAC,EAAD,CAAYH,QAASA,EAAST,eAAgBY,QCdzCG,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,O,MCAdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.65c41058.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react'\r\n\r\nconst Tags = ({ tagsUpdated, key }) => {\r\n    const tagChoices = ['node', 'javascript', 'react', 'react-native','digital-marketing','devops'];\r\n    const [selectedTags, setSelectedTags] = useState([]);\r\n\r\n    useEffect(() => {\r\n        setSelectedTags([]);\r\n    }, [key]);\r\n\r\n    const tagChange = (e) => {\r\n        const value = e.target.value;\r\n        const alreadySelected = selectedTags.includes(value);\r\n        if (e.target.checked && !alreadySelected) {\r\n            setSelectedTags([...selectedTags, value]);\r\n        } else if (!e.target.checked && alreadySelected) {\r\n            setSelectedTags(\r\n                selectedTags.filter((prevTag) => prevTag !== value)\r\n            );\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        tagsUpdated(selectedTags);\r\n    }, [selectedTags, tagsUpdated]);\r\n\r\n    return (\r\n        <>\r\n            {tagChoices.map((choice, index) => (\r\n                <label className=\"checkbox-inline mr-3\" key={index}>\r\n                    <input\r\n                        type=\"checkbox\"\r\n                        value={choice}\r\n                        onChange={tagChange}\r\n                    />\r\n                    {' ' + choice}\r\n                </label>\r\n            ))}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Tags\r\n","import React, { useState } from 'react';\r\nimport Tags from './Tags';\r\n\r\nexport default function CourseForm({ courseAdded }) {\r\n    const [name, setName] = useState('');\r\n    const [link, setLink] = useState('');\r\n    const [tags, setTags] = useState([]);\r\n    const [count, setCount] = useState(0);\r\n\r\n    const resetForm = () => {\r\n        setName('');\r\n        setLink('');\r\n        setCount(count + 1);\r\n    };\r\n\r\n    const submitCourse = async (e) => {\r\n        e.preventDefault();\r\n        try {\r\n            await fetch('https://worker.gazanfarli.workers.dev/', {\r\n                method: 'POST',\r\n                body: JSON.stringify({ name, link, tags }),\r\n            });\r\n            resetForm();\r\n            courseAdded();\r\n        } catch (err) {\r\n            console.error(err);\r\n        }\r\n        console.log(name, link);\r\n    };\r\n    \r\n    return (\r\n        <div className=\"card\">\r\n            <div className=\"card-header\">Add a New Course</div>\r\n            <div className=\"card-body\">\r\n                <form className=\"\" onSubmit={submitCourse}>\r\n                    <div className=\"form-group\">\r\n                        <label htmlFor=\"name\">Name</label>\r\n                        <input\r\n                            type=\"text\"\r\n                            name=\"name\"\r\n                            value={name}\r\n                            className=\"form-control\"\r\n                            onChange={(e) => setName(e.target.value)}\r\n                        />\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <label htmlFor=\"link\">Link</label>\r\n                        <input\r\n                            type=\"text\"\r\n                            name=\"link\"\r\n                            value={link}\r\n                            className=\"form-control\"\r\n                            onChange={(e) => setLink(e.target.value)}\r\n                        />\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <p>Tags</p>\r\n                        <Tags tagsUpdated={setTags} key={count} />\r\n                    </div>\r\n                    <button type=\"submit\" className=\"btn btn-primary\">\r\n                        Submit\r\n                    </button>\r\n                </form>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n","import React from 'react'\r\n\r\nconst Course = ({ course, refreshCourses }) => {\r\n    const markCoursePurchased = async () => {\r\n        try {\r\n            await fetch('https://worker.gazanfarli.workers.dev/', {\r\n                method: 'PUT',\r\n                body: JSON.stringify({ ...course, purchased: true }),\r\n            });\r\n            refreshCourses();\r\n        } catch (err) {\r\n            console.error(err);\r\n        }\r\n    };\r\n\r\n    const deleteCourse = async () => {\r\n        try {\r\n            await fetch('https://worker.gazanfarli.workers.dev/', {\r\n                method: 'DELETE',\r\n                body: JSON.stringify({ id: course.id }),\r\n            });\r\n            refreshCourses();\r\n        } catch (err) {\r\n            console.error(err);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"list-group-item\">\r\n            <a href={course.link}>\r\n                <h4 className=\"list-group-item-heading\">{course.name}</h4>\r\n            </a>\r\n            <p>\r\n                Tags:{' '}\r\n                {course.tags && course.tags.map((tag, index) => (\r\n                    <span className=\"badge badge-primary mr-2\" key={index}>{tag}</span>\r\n                ))}\r\n            </p>\r\n            {!course.purchased && (\r\n                <button className=\"btn btn-sm btn-primary\" onClick={markCoursePurchased}>Purchased</button>\r\n            )}\r\n            <button className=\"btn btn-sm btn-danger ml-2\" onClick={deleteCourse}>Delete</button>\r\n        </div>\r\n    )\r\n}\r\nexport default Course\r\n","import React from 'react'\r\nimport Course from './Course';\r\n\r\nconst CourseList = ({ courses, refreshCourses }) => {\r\n    return (\r\n        <div>\r\n            <h2 className=\"mt-5 mb-3\">To Learn</h2>\r\n            <div className=\"list-group\">\r\n                {courses\r\n                    .filter((course) => !course.purchased)\r\n                    .map((course) => <Course course={course} key={course.id} refreshCourses={refreshCourses} />\r\n                )}\r\n            </div>\r\n            <h2 className=\"mt-5 mb-3\">Already Purchased</h2>\r\n            {courses\r\n                .filter((course) => course.purchased)\r\n                .map((course) => <Course course={course} key={course.id} refreshCourses={refreshCourses} />\r\n            )}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CourseList\r\n","import CourseForm from './components/CourseForm';\r\nimport CourseList from './components/CourseList';\r\nimport './App.css';\r\nimport { useEffect, useState } from 'react';\r\n\r\nfunction App() {\r\n  const [courses, setCourses] = useState([]);\r\n  \r\n  const loadCourses = async () => {\r\n    try {\r\n      const res = await fetch('https://worker.gazanfarli.workers.dev/');\r\n      const courses = await res.json();\r\n      setCourses(courses);\r\n    } catch (error) {\r\n        console.error(error);\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    loadCourses();\r\n  }, []);\r\n  \r\n  return (\r\n    <div className=\"container mt-5\">\r\n          <h1 className=\"mb-5 text-center\">Course Tracker</h1>\r\n          <CourseForm courseAdded={loadCourses} />\r\n          <CourseList courses={courses} refreshCourses={loadCourses} />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport 'bootstrap/dist/css/bootstrap.css';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}